name: Build and unit tests

on: [push, pull_request]

jobs:
  # This job is called test_docs.
  unit_test_and_docs:
    # Run on Ubuntu
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # real versions
          #- NAME: Real
          #  OPTIONAL: 'default'
          #  INTERFACE: 'interface'

          # complex versions
          - NAME: Complex
            OPTIONAL: 'complex'
            INTERFACE: 'complex_interface'

    name: FUNtoFEM ${{ matrix.NAME }} Build/Test

    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install and run unit tests
        run: |
          echo "=============================================================";
          echo "Run #${GITHUB_RUN_NUMBER}";
          echo "Run ID: ${GITHUB_RUN_ID}";
          echo "Testing: ${GITHUB_REPOSITORY}";
          echo "Triggered by: ${GITHUB_EVENT_NAME}";
          echo "Initiated by: ${GITHUB_ACTOR}";
          echo "=============================================================";
          echo "=============================================================";
          echo "Create conda environment";
          echo "=============================================================";
          source $CONDA/etc/profile.d/conda.sh;
          echo $CONDA/bin >> $GITHUB_PATH;
          conda create -n FUNtoFEM python=3.8 numpy=1.18 scipy=1.4 -q -y;
          conda activate FUNtoFEM;
          echo "=============================================================";
          echo "Install TACS";
          echo "=============================================================";
          pip install testflo;
          conda install -c anaconda openmpi -q -y;
          conda install gxx_linux-64 -q -y;
          conda install -c anaconda openblas -q -y;
          conda install -c conda-forge lapack -q -y;
          conda install -c conda-forge metis -q -y;
          conda install -c conda-forge mpi4py -q -y;
          conda install -c conda-forge matplotlib  -q -y;
          conda install -c conda-forge git -q -y;
          pip install cython;
          git clone https://github.com/smdogroup/tacs.git /home/runner/work/tacs -b develop;
          export TACS_DIR=/home/runner/work/tacs;
          cd $TACS_DIR;
          cp Makefile.in.info Makefile.in;
          make ${{ matrix.OPTIONAL }} TACS_DIR=$TACS_DIR METIS_INCLUDE=-I${CONDA_PREFIX}/include/ METIS_LIB="-L${CONDA_PREFIX}/lib/ -lmetis";
          cd $TACS_DIR;
          make ${{ matrix.INTERFACE }};
          echo "=============================================================";
          echo "Build FUNtoFEM";
          echo "=============================================================";
          export F2F_DIR=${GITHUB_WORKSPACE};
          cd $F2F_DIR;
          mkdir build
          cd build
          if ["${{ matrix.NAME }}" = "Complex"]; then
            cmake -DUSE_MKL=OFF -DUSE_COMPLEX=ON ..
          else
            cmake -DUSE_MKL=OFF -DUSE_COMPLEX=OFF ..
          fi
          make install
          echo "=============================================================";
          echo "Run CTest";
          echo "=============================================================";
          ctest
          echo "=============================================================";
          echo "Build python interface";
          echo "=============================================================";
          cd ..
          if ["${{ matrix.NAME }}" = "Complex"]; then
            python3 setup.py build_ext --inplace --define FUNTOFEM_USE_COMPLEX
          else
            python3 setup.py build_ext --inplace
          fi
#          cp Makefile.in.info Makefile.in;
#          make ${{ matrix.OPTIONAL }} F2F_DIR=$F2F_DIR METIS_INCLUDE=-I${CONDA_PREFIX}/include/ METIS_LIB="-L${CONDA_PREFIX}/lib/ -lmetis";
#          cd $F2F_DIR;
#          make ${{ matrix.INTERFACE }};
          echo "=============================================================";
          echo "Running Tests";
          echo "=============================================================";
          python3 ${GITHUB_WORKSPACE}/tests/adjoint_tests/aerothermal_adjoint_test/gen_TACS_bdf_aero.py;
          python3 ${GITHUB_WORKSPACE}/tests/adjoint_tests/aerothermoelastic_adjoint_test/gen_TACS_bdf_aero.py;
          python3 ${GITHUB_WORKSPACE}/tests/adjoint_tests/unsteady_aerothermal_adjoint_test/gen_TACS_bdf_aero.py;
          testflo ${GITHUB_WORKSPACE}/tests/;
